#include <TFT_eSPI.h>
#include "bitmap.h"

#define encoderPinA 34
#define encoderPinB 33
#define encoderButton 35

/*DISPLAY PINS
GND - GND
VCC - VCC
SCL - 18
SDA - 23
RES - 19
DC - 14
BLK - 3.3V
*/

TFT_eSPI tft = TFT_eSPI();

int currentMenu = 1;
const unsigned long longPressDuration = 1000;
unsigned long clickTime;
bool isClicked;
bool isLongClick;

volatile int counter = 0;
volatile int menuCounter = 1, secondaryCounter = 1, tertiaryCounter = 1;

volatile int lastState = LOW;
volatile int lastStateButton = LOW;

String currentDir = "";
unsigned long lastButtonPress = 0;

void updateCounter() {
  int currentStateA = digitalRead(encoderPinA);
  int currentStateB = digitalRead(encoderPinB);

  if (currentMenu == 1) {
    if (currentStateA != lastState && currentStateA == currentStateB) {
      counter++;
    } else if (currentStateA != lastState && currentStateA != currentStateB) {
      counter--;
    }
  } else {
    if (currentStateA != lastState && currentStateA == currentStateB) {
      secondaryCounter++;
    } else if (currentStateA != lastState && currentStateA != currentStateB) {
      secondaryCounter--;
    }
  }

  lastState = currentStateA;
}


void mainMenuImage(int counter) {
  switch (counter) {
    case 1:
      tft.fillScreen(TFT_BLACK);
      tft.pushImage(0, 0, 240, 240, Songs);
      break;
    case 2:
      tft.fillScreen(TFT_BLACK);
      tft.pushImage(0, 0, 240, 240, Chords);
      break;
    case 3:
      tft.fillScreen(TFT_BLACK);
      tft.pushImage(0, 0, 240, 240, Scales);
      break;
    case 4:
      tft.fillScreen(TFT_BLACK);
      tft.pushImage(0, 0, 240, 240, Games);
      break;
    case 5:
      tft.fillScreen(TFT_BLACK);
      tft.pushImage(0, 0, 240, 240, Settings);
      break;
    case 6:
      tft.fillScreen(TFT_WHITE);
      break;
  }
}

void subMenuImage(int secondaryCounter) {
}

void detectHold() {
  if (digitalRead(encoderButton) == LOW) {
    isClicked = true;
    if (millis() - clickTime >= longPressDuration && !isLongClick) {
      //long press
      isLongClick = true;
      currentMenu--;  //going back a menu
    }
  }
  if (digitalRead(encoderButton) == HIGH) {
    if (isClicked && !isLongClick) {
      //short press
      Serial.println("short press");
      if (currentMenu == 1) {                          //in main menu
        currentMenu++;                                 //enter secondary menu
      } else if (currentMenu == 2) {                   //already in secondary menu
        runSelectedAction(counter, secondaryCounter);  //interact with secondary menu
      }
    }
    clickTime = millis();
    isClicked = false;
    isLongClick = false;
  }
}

void runSelectedAction(volatile int counter1, volatile int counter2) {
}

void setup() {
  Serial.begin(115200);

  pinMode(encoderPinA, INPUT_PULLUP);
  pinMode(encoderPinB, INPUT_PULLUP);
  pinMode(encoderButton, INPUT_PULLUP);

  Serial.print("TFT Test");

  tft.begin();
  tft.setSwapBytes(true);

  tft.fillScreen(TFT_BLACK);
  tft.pushImage(0, 0, 240, 240, Songs);

  menuCounter = 1;
  mainMenuImage(menuCounter);

  attachInterrupt(digitalPinToInterrupt(encoderPinA), updateCounter, CHANGE);
  attachInterrupt(digitalPinToInterrupt(encoderPinB), updateCounter, CHANGE);
  //attachInterrupt(digitalPinToInterrupt(encoderButton), switchMenuOrInteract, CHANGE); // am schimbat aici la functia switchMenu simplu in caz ca o sa o folosim pe cealalta.  --David
}

void loop() {

  detectHold();

  if (currentMenu == 1) {
    if (counter < -1) {
      if (menuCounter + 1 > 5) {
        menuCounter = 0;
      } else {
        menuCounter++;
      }
      mainMenuImage(menuCounter);
      counter = 0;
    } else if (counter > 1) {
      if (menuCounter - 1 < 0) {
        menuCounter = 5;
      } else {
        menuCounter--;
      }
      mainMenuImage(menuCounter);
      counter = 0;
    }
  } else if (currentMenu == 2) {
    if (counter < -1) {
      if (menuCounter + 1 > 5) {
        menuCounter = 0;
      } else {
        menuCounter++;
      }
      mainMenuImage(menuCounter);
      counter = 0;
    } else if (counter > 1) {
      if (menuCounter - 1 < 0) {
        menuCounter = 5;
      } else {
        menuCounter--;
      }
      mainMenuImage(menuCounter);
      counter = 0;
    }
  }
  delay(10);
}
	